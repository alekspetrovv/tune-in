steps:
  #   # build jar packages to be used for the docker containers
  # - name: 'gcr.io/cloud-builders/mvn'
  #   entrypoint: mvn
  #   args: ['clean', 'install', '-Dmaven.test.skip=true']
  #   dir: './backend'
  #  # build the container image
  # - name: 'gcr.io/cloud-builders/docker'
  #   args: [ 'build', '-t', 'gcr.io/${PROJECT_ID}/app', './backend/services/feed-service' ]
  #  # push the container image
  # - name: 'gcr.io/cloud-builders/docker'
  #   args: [ 'push', 'gcr.io/${PROJECT_ID}/app']
  
  #  # deploy the container image
  # - name: "gcr.io/cloud-builders/gcloud"
  #   args: [
  #     'run',
  #     'deploy',
  #     'app',
  #     '--image',
  #     'gcr.io/$PROJECT_ID/app',
  #     '--port', '8087',
  #     '--region', 'europe-west4',
  #     '--platform', 'managed',
  #     '--allow-unauthenticated']
  
  - name: 'gcr.io/cloud-builders/docker'
    args: [ 'build', '-t', 'gcr.io/$PROJECT_ID/web', './frontend' ]
    # [Web] push the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: [ 'push', 'gcr.io/$PROJECT_ID/web']
    # [Web] deploy the container to Cloud Run
  - name: "gcr.io/cloud-builders/gcloud"
    args: [
      'run',
      'deploy',
      'app',
      '--image',
      'gcr.io/$PROJECT_ID/app',
      '--port', '3000',
      '--region', 'europe-west4',
      '--platform', 'managed',
      '--allow-unauthenticated']
options:
  logging: CLOUD_LOGGING_ONLY
