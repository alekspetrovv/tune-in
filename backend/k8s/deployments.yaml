apiVersion: apps/v1
kind: Deployment
metadata:
  name: feed-deployment
  labels:
    app: feed-deployment
spec:
  replicas: 3
  template:
    metadata:
      name: feed-pod
      labels:
        app: feed-pod
    spec:
      containers:
        - name: feed-container
          image: alekspetrovv/feed-service:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8087
      restartPolicy: Always
  selector:
    matchLabels:
      app: feed-pod
#---
#
#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  name: blog-deployment
#  labels:
#    app: blog-deployment
#spec:
#  replicas: 3
#  template:
#    metadata:
#      name: blog-pod
#      labels:
#        app: blog-pod
#    spec:
#      containers:
#        - name: blog-container
#          image: alekspetrovv/blog-service:latest
#          imagePullPolicy: Always
#          ports:
#            - containerPort: 8085
#      restartPolicy: Always
#  selector:
#    matchLabels:
#      app: blog-pod
#---
#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  name: keycloak
#  labels:
#    app: keycloak
#spec:
#  replicas: 1
#  selector:
#    matchLabels:
#      app: keycloak
#  template:
#    metadata:
#      labels:
#        app: keycloak
#    spec:
#      containers:
#        - name: keycloak
#          image: quay.io/keycloak/keycloak:20.0.1
#          args: ["start-dev"]
#          env:
#            - name: KEYCLOAK_ADMIN
#              value: "admin"
#            - name: KEYCLOAK_ADMIN_PASSWORD
#              value: "admin"
#            - name: KC_PROXY
#              value: "edge"
#          ports:
#            - name: http
#              containerPort: 8080
#          readinessProbe:
#            httpGet:
#              path: /realms/master
#              port: 8080
#---
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
spec:
  replicas: 2
  selector:
    matchLabels:
      app: web-pod
  template:
    metadata:
      labels:
        app: web-pod
    spec:
      containers:
        - name: web-container
          image: react-image
          imagePullPolicy: Always
          ports:
            - containerPort: 80
